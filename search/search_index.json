{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the comprehensive guide on using the command line effectively. This documentation is for term 1 CST students. It is designed to help both  beginners and advanced users to navigate, manage files, and execute various tasks  using the command line interface.</p> <p>Overview  </p> <p>The command line is a powerful tool that allows users to perform tasks by typing  commands into a terminal or console window. Understanding how to use it is  essential for system administration, software development, and data management.</p> <p>Before diving into the command line, it's important to understand the basics of the  terminal, including its history, importance in modern computing, and how it  compares to graphical user interfaces.</p> <p>Info</p> <p>These instructions are intended for windows users.</p> <p>These commands do may not work on external cloud drives (i.e., Google Drive, oneDrive, etc.).</p> <p> Getting Started </p> <ul> <li>Organize Files: Learn how to create, move, and manage files  and directories.</li> <li>Search and Move Files: Discover how to search for files and move  them around within your file system.</li> <li>Delete Files: Understand the commands for safely deleting  files and directories.</li> </ul> <p> Admonitions  </p> <p>Throughout the CommandLine documentation there will be admonitions that symbolize  information.</p> <p>Info</p> <p>Info contains general information for each section. They are used at the introduction to ensure users have the right material before following the guide.</p> <p>Note</p> <p>Notes that lets you know a potential problem. It is not dangerous as a warning, just something to notice.</p> <p>Warning</p> <p>Warnings are a must read before continuing on with the guide. Users must know the potential risks for each step.</p> <p>Tip</p> <p>Tip are helpful insights that can may help you or make it easier to follow the guidelines.</p>"},{"location":"DeletingFiles/","title":"Delete Files","text":"<p>Info</p> <p>User is expected to have files and directories to delete for this section.</p> <p> Overview  </p> <p>In this section you will explore how to delete files using the Windows Command Prompt. This section is designed to provide you with the necessary command-line skills to remove files and directories efficiently. While file deletion is a fundamental operation, it's essential to approach it with caution. This guide will not only show you how to execute deletions but also how to verify that you're deleting only what you intend to remove.</p> <p>Warning</p> <p>The following section will deletes your files, directories, and also your empty recycle bin! </p> <ol> <li> <p>Open the Command Prompt by pressing <code>Windows Key + R</code>, typing <code>cmd</code>, and pressing  Enter. </p> <p> Command Prompt window </p> </li> <li> <p>Find the file, if you know the directory of the file already, you can move to step 4.</p> <p>Navigate to your desired directory using the <code>cd</code> command for file deletion. If you already know the file name for deleting, try these commands to find location. <pre><code>C:\\[Users]\\[user]&gt;dir /s /b [file name]\n</code></pre> For example:  <pre><code>C:\\Users\\Richard&gt;dir /s /b text.txt\n</code></pre></p> <p>Tip</p> <p>If you only know the first few letters of the file name, do the command below <pre><code>C:\\[Users]\\[user]&gt;dir /s /b *[file name]*\n</code></pre></p> <p>For example: <pre><code>C:\\Users\\Richard&gt;dir /s /b *tex*\n</code></pre></p> </li> <li> <p>Copy the file location of the address by highlighting the directory using ctrl + c.</p> <p>For example,     if I'm looking for the txt file, only copy the address before the file. <pre><code>C:\\Users\\Richard\\Downloads\\text.txt\n</code></pre> I would only copy the bottom portion. <pre><code>C:\\Users\\Richard\\Downloads\\\n</code></pre></p> </li> <li> <p>Navigate to your desired file location using the <code>cd</code> command where you want to delete files.</p> <pre><code>cd [directory address]\n</code></pre> <p> For example:  <pre><code>cd C:\\[Users]\\[user]\\Documents\n</code></pre></p> </li> <li> <p>List the files in a directory before deletion:      <pre><code>dir /b\n</code></pre></p> </li> <li> <p>Delete a single file using the <code>del</code> command: </p> <p>Warning</p> <p>The following steps deletes your file! Don't use the command if you  don't want to delete the file!</p> <pre><code>del [filename].txt\n</code></pre> <p>For example:  <pre><code>del file.txt\n</code></pre></p> </li> <li> <p>Verify that the file has been deleted:</p> <pre><code>dir /b\n</code></pre> </li> <li> <p>Use wildcards to delete multiple files:</p> <p>Warning</p> <p>The following steps will delete multiple file! Don't use the command  if you don't want to delete your files!</p> <pre><code>del *.txt\n</code></pre> </li> <li> <p>Remove entire directories using <code>rmdir</code> or <code>rd</code>: </p> <p>Warning</p> <p>The following steps will delete directories! Don't use the command if  you don't want to delete your directories!</p> <pre><code>rmdir /s /q C:\\path\\to\\directory\n</code></pre> </li> <li> <p>Secure deletion, we are use a third-party tool like <code>sdelete</code> from Sysinternals: </p> <pre><code>sdelete -p 3 filename.txt\n</code></pre> </li> <li> <p>Empty the recycle bin via the command line: </p> <p>Warning</p> <p>The following steps will empty your recycle bin! Don't use the command  if you don't want to empty your recycle bin!</p> <pre><code>rd /s /q C:\\$Recycle.Bin\n</code></pre> </li> </ol> <p>Conclusion</p> <p>At the end of the conclusion, you will learn the following:</p> <p>\u2705 How to delete files</p> <p>\u2705 How to delete directories</p> <p>\u2705 How to empty recycle bin</p> <p>Good job! \ud83d\ude04 You are now able to delete files, directories and empty recycle bins.</p>"},{"location":"OrganizeFiles/","title":"Organize Files","text":"<p> Overview </p> <p>In this section you will explore how to do basic file organization skills using Windows command Prompt. You'll learn how to efficiently create, navigate, and manage directories and files. </p> <p>Tip</p> <p>Maintain a structured folder hierarchy for better organization and ease of access.</p> <ol> <li> <p>Open the Command Prompt by pressing <code>Windows Key + R</code>, typing <code>cmd</code>, and pressing <code>Enter</code>.</p> <p> Command Prompt window </p> </li> <li> <p>Check the directories available using the <code>dir</code> command. <pre><code>cd dir\n</code></pre></p> </li> <li> <p>Navigate to your desired directory using the <code>cd</code> command. </p> <p>Note</p> <p>you can only change locations properly if you write the full address</p> <p>If you do not write the full address, you may need to use cd.. to navigate backwards.</p> <p>For example. moving from documents to downloads <pre><code>cd Documents\ncd ..\ncd Downloads\n</code></pre></p> <pre><code>cd [directory address]\n</code></pre> <p> For Example:  <pre><code>cd C:\\Users\\Richard\\Documents\n</code></pre></p> </li> <li> <p>Create a new directory using <code>mkdir</code>. </p> <pre><code>mkdir [Folder Name]\n</code></pre> <p> For instance:  <pre><code>mkdir NewFolder\n</code></pre></p> <p>Note</p> <p>If you already have a folder with the same file.name in the directory, it will not create a new folder.</p> </li> <li> <p>Navigate to the newly created directory with <code>cd</code>:     <pre><code>cd [Folder Name]\n</code></pre></p> <p> Example:  <pre><code>cd NewFolder\n</code></pre></p> </li> <li> <p>Create a new file by using <code>echo</code>.      <pre><code>echo. &gt; [file name].txt\n</code></pre></p> <p> For example:  <pre><code>echo. &gt; newfile.txt\n</code></pre></p> </li> <li> <p>Open the file with a text editor.     <pre><code>[txt editor] [file name].txt\n</code></pre></p> <p> For example,  use Notepad: </p> <pre><code>notepad newfile.txt\n</code></pre> </li> <li> <p>Write content to the file using <code>echo</code>.      <pre><code>echo [content] &gt;&gt; [file name].txt\n</code></pre></p> <p> For instance:  <pre><code>echo Hello, World! &gt;&gt; newfile.txt\n</code></pre></p> </li> <li> <p>Verify the file's content with <code>type</code>:</p> <p><pre><code>type [filename].txt\n</code></pre>  For example  <pre><code>type newfile.txt\n</code></pre></p> </li> </ol> <p>Conclusion</p> <p>At the end of the conclusion, you will learn the following:</p> <p>\u2705 How to create directories</p> <p>\u2705 How to create files</p> <p>\u2705 How to navigate through files</p> <p>\u2705 How to write in files</p> <p>Well done on completing this comprehensive guide to organizing files with the  Command Prompt \ud83d\ude04. You've learned how to create directories, create files, navigate through files, and write in files.</p> <p>Now, you can go to Search and Move Files to discover how to search for files and move them around within your file system.</p>"},{"location":"SearchMove/","title":"Search and Move Files","text":"<p>Overview</p> <p>In this section you will explore the guide presents fundamental skills for  effective file management. Whether locating text files within nested directories or  relocating batches of data, the skills you acquire today will prove invaluable in  the long term.</p> <ol> <li> <p>Open the Command Prompt by pressing <code>Windows Key + R</code>, typing <code>cmd</code>, and pressing Enter.</p> <p> Command Prompt window </p> </li> <li> <p>Use the <code>dir</code> command to search for files. For example, to find all <code>.txt</code> files in a directory:</p> <p>For example, to find all <code>.txt</code> files in a directory: <pre><code>dir /s /b *.txt\n</code></pre> For example, to find a specific .txt file in a directory: <pre><code>dir /s /b [filename].txt\n</code></pre> For example, to find a file named 'file.txt' in a directory: <pre><code>dir /s /b file.txt\n</code></pre></p> </li> <li> <p>Move a file to a new location with the <code>move</code> command:</p> <p><pre><code>move C:\\[path]\\[to]\\[source]\\[filename].txt C:\\[path]\\[to]\\[destination]\\\n</code></pre> For example To move 'file.txt' from downloads of user Richard to documents: <pre><code>move C:\\Users\\Richard\\Downloads\\file.txt C:\\Users\\Richard\\Documents\n</code></pre></p> </li> <li> <p>Check that the file has been moved to the new location:</p> <pre><code>dir C:\\[path]\\[to]\\[destination]\\\n</code></pre> </li> <li> <p>Copy a file with the <code>copy</code> command:</p> <pre><code>copy C:\\[path]\\[to]\\[source]\\[filename].txt C:\\[path]\\[to]\\[destination]\\[filename].txt\n</code></pre> </li> <li> <p>Rename a file using the <code>ren</code> or <code>rename</code> command:</p> <pre><code>ren C:\\[path]\\[to]\\[filename].txt newfilename.txt\n</code></pre> </li> <li> <p>Search for a specific string within files using <code>findstr</code>:</p> <pre><code>findstr /s \"searchstring\" *.txt\n</code></pre> </li> <li> <p>Organize Search Results by sorting the search results by name or date using <code>dir</code> with sorting flags:</p> <pre><code>dir /b /o:n *.txt\n</code></pre> </li> <li> <p>Move only certain files using wildcards with <code>move</code>:</p> <pre><code>move C:\\[path]\\[to]\\[source]\\*.txt C:\\[path]\\[to]\\[destination]\\\n</code></pre> </li> <li> <p>Recreate the directory structure in the destination using <code>xcopy</code>:</p> <pre><code>xcopy /t /e C:\\[path]\\[to]\\[source]\\ C:\\[path]\\[to]\\[destination]\\\n</code></pre> </li> </ol> <p>Conclusion</p> <p>At the end of the conclusion, you will learn the following:</p> <p>\u2705 How to search for files</p> <p>\u2705 How to move files</p> <p>\u2705 How to copy files</p> <p>\u2705 How to rename files</p> <p>\u2705 How to search strings within files</p> <p>Congratulations on completing this guide to searching and moving files with the  Windows Command Prompt \ud83d\ude04. You've learned to search for files, move files, copy files, rename files, and search strings within files.</p> <p>Now, you can go to Delete Files to understand the commands for safely deleting files and directories.</p>"},{"location":"Troubleshooting/","title":"Troubleshooting","text":"<p>The following table outlines common issues encountered during file operations, possible causes, and the actions you can take to resolve them.</p> Symptom Probable Cause Action File exists error during move or copy A file with the same name exists in the destination directory. Use the move command with an overwrite flag in Windows: <code>bash move /Y sourcePath\\filename.extension destinationPath\\</code> Or rename the file before moving or copying. Access denied error Lack of permissions to access the files or directories. Run the Command Prompt as an administrator, or check and modify the file permissions. Path not found error The source or destination path does not exist. Verify that the source and destination paths are correct. Create the directories if they do not exist using: <code>bash mkdir pathTo\\newDirectory</code> File is in use error The file you are trying to delete, move, or modify is open in another program. Close the program that's using the file. If you're not sure which program it is, restart your computer and try the operation again. File is corrupted error The file cannot be opened because it is corrupted. Try using file repair tools specific to the file type. If you have a backup, restore the file from the backup. Unable to delete file The file may be set as read-only or you may not have the necessary permissions. Check if the file is read-only and change its properties if necessary. Ensure you have the proper permissions to delete the file. File synchronization issues Files not syncing properly across devices or networks. Ensure all devices are connected to the network. Check if the sync settings are configured correctly and if there are any error messages, address them as per the application's troubleshooting guide. <p>Please replace <code>sourcePath</code>, <code>filename.extension</code>, and <code>destinationPath</code> with your actual file paths and filenames.</p>"},{"location":"glossary/","title":"Glossary","text":"<p>Below is a glossary of terms related to file operations and command line usage:</p> Term Definition <code>cd</code> Stands for \"change directory\" and is used to change the current working directory in a command line interface. <code>copy</code> Command used to copy files or directories. <code>del</code> Command used to delete files. <code>del /S</code> is used to delete files recursively. <code>dir</code> Displays a list of files and subdirectories in a directory. <code>dir /s /b</code> Displays a list of files and subdirectories across multiple directories. <code>echo</code> Command used to display messages on the screen or to turn echo on or off. <code>find</code> Command used to search for files in a directory hierarchy. <code>mkdir</code> Command to create a new directory. <code>move</code> A command to move files or directories from one place to another. <code>findstr</code> Search for a specific string within files. <code>xcopy</code> Recreate the directory structure in the destination. <code>rd</code> An alias for rmdir in Windows CMD. It has the same functionality as rmdir. <code>rmdir</code> Stands for \"remove directory\" and is used to delete a directory. <code>sdelete</code> Secure delete tool used to permanently delete files or directories beyond recovery. <code>type</code> displays the contents of a text file."}]}